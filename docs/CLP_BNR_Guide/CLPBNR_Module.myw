### Module clpBNR

This version of CLP(BNR) is structured as a SWI-Prolog module with the following interface definition:
.pl
	:- module(clpBNR,          % SWI module declaration
		[
		op(700, xfx, ::),
		(::)/2,                % declare interval
		{}/1,                  % define constraint
		interval/1,            % filter for clpBNR constrained var
		list/1,                % O(1) list filter (also for compatibility)
		domain/2, range/2,     % get type and bounds (domain)
		delta/2,               % width (span) of an interval or numeric (also arithmetic function)
		midpoint/2,            % midpoint of an interval (or numeric) (also arithmetic function)
		median/2,              % median of an interval (or numeric) (also arithmetic function)
		lower_bound/1,         % narrow interval to point equal to lower bound
		upper_bound/1,         % narrow interval to point equal to upper bound
	
		% additional constraint operators
		op(200, fy, ~),        % boolean 'not'
		op(500, yfx, and),     % boolean 'and'
		op(500, yfx, or),      % boolean 'or'
		op(500, yfx, nand),    % boolean 'nand'
		op(500, yfx, nor),     % boolean 'nor'
		op(500, yfx, xor),     % boolean 'xor'
		op(700, xfx, <>),      % integer not equal
		op(700, xfx, <=),      % included (one way narrowing)
	
		% utilities
		print_interval/1, print_interval/2,      % pretty print interval with optional stream
		small/1, small/2,      % defines small interval width based on precision value
		solve/1, solve/2,      % solve (list of) intervals using split to find point solutions
		splitsolve/1, splitsolve/2,   % solve (list of) intervals using split
		absolve/1, absolve/2,  % absolve (list of) intervals, narrows by nibbling bounds
		enumerate/1,           % "enumerate" integers
		global_minimum/2,      % find interval containing global minimum(s) for an expression
		global_minimum/3,      % global_minimum/2 with definable precision
		global_maximum/2,      % find interval containing global maximum(s) for an expression
		global_maximum/3,      % global_maximum/2 with definable precision
		global_minimize/2,     % global_minimum/2 plus narrow vars to found minimizers
		global_minimize/3,     % global_minimum/3 plus narrow vars to found minimizers
		global_maximize/2,     % global_maximum/2 plus narrow vars to found maximizers
		global_maximize/3,     % global_maximum/3 plus narrow vars to found maximizers
		nb_setbounds/2,        % non-backtracking set bounds (use with branch and bound)
		partial_derivative/3,  % differentiate Exp wrt. X and simplify
		clpStatistics/0,       % reset
		clpStatistic/1,        % get selected
		clpStatistics/1,       % get all defined in a list
		watch/2,               % enable monitoring of changes for interval or (nested) list of intervals
		trace_clpBNR/1         % enable/disable tracing of clpBNR ops
		]).

Documenting these predicates and how to use them is the focus of the rest of this document. 

See the [Getting Started] section of the `README` file for instructions on downloading and installing the `clpBNR` package for SWI-Prolog.

<#TableOfContents>

&
	[Getting Started] <- link https://github.com/ridgeworks/clpBNR_pl#getting-started
